;; Initialize package.el
(require 'package)
(add-to-list 'package-archives
             '("melpa" . "http://melpa.milkbox.net/packages/") t)

(package-initialize)

;; Ensure that el-get is installed
(add-to-list 'load-path "~/.emacs.d/el-get/el-get")

(unless (require 'el-get nil 'noerror)
  (with-current-buffer
      (url-retrieve-synchronously
       "https://raw.githubusercontent.com/dimitri/el-get/master/el-get-install.el")
    (goto-char (point-max))
    (eval-print-last-sexp)))

(require 'el-get-elpa)
(unless (file-directory-p el-get-recipe-path-elpa)
  (el-get-elpa-build-local-recipes))

(add-to-list 'el-get-recipe-path "~/Dotfiles/emacs/recipes")

(el-get 'sync
        '(evil
          paredit
          evil-paredit
          auctex
          
          haskell-mode
          clojure-mode
          js2-mode
          markdown-mode
          rust-mode
          toml-mode

          helm
          helm-git-grep

          color-theme-solarized))

;; Configuration
(require 'evil)
(evil-mode 1)

;;; Escape quits everything
(defun minibuffer-keyboard-quit ()
  "Abort recursive edit.
In Delete Selection mode, if the mark is active, just deactivate it;
then it takes a second \\[keyboard-quit] to abort the minibuffer."
  (interactive)
  (if (and delete-selection-mode transient-mark-mode mark-active)
      (setq deactivate-mark  t)
    (when (get-buffer "*Completions*") (delete-windows-on "*Completions*"))
    (abort-recursive-edit)))

(define-key evil-normal-state-map [escape] 'keyboard-quit)
(define-key evil-visual-state-map [escape] 'keyboard-quit)
(define-key minibuffer-local-map [escape] 'minibuffer-keyboard-quit)
(define-key minibuffer-local-ns-map [escape] 'minibuffer-keyboard-quit)
(define-key minibuffer-local-completion-map [escape] 'minibuffer-keyboard-quit)
(define-key minibuffer-local-must-match-map [escape] 'minibuffer-keyboard-quit)
(define-key minibuffer-local-isearch-map [escape] 'minibuffer-keyboard-quit)

;; Paredit
(require 'paredit)
(require 'evil-paredit)

(add-hook 'emacs-lisp-mode-hook 'paredit-mode)
(add-hook 'emacs-lisp-mode-hook 'evil-paredit-mode)

;; Javascript
(add-to-list 'auto-mode-alist '("\\.js\\'" . js2-mode))

;; Markdown
(require 'markdown-mode)

;; Line Numbers
(global-linum-mode 1)
(setq linum-format "%d ")

;; Hide the Menu Bar
(menu-bar-mode -1)

;; Hide the welcome screen
(setq inhibit-startup-message t)

;; Backup Files in a better location
(setq backup-directory-alist `(("." . "~/.saves")))
(setq auto-save-file-name-transforms `((".*" ,temporary-file-directory t)))
(setq backup-by-copying t)
(setq delete-old-versions t
      kept-new-versions 6
      kept-old-versions 2
      version-control t)

;; Helm
(require 'helm-mode)
(helm-mode 1)
(global-set-key (kbd "M-x") 'helm-M-x)

;; (define-key helm-map
;;   (kbd "TAB") 'helm-execute-persistent-action)

(require 'helm-git-grep)
(global-set-key (kbd "C-c g") 'helm-git-grep)

;; Color Scheme
(if (daemonp)
    (add-hook 'after-make-frame-functions
	      '(lambda (f)
		 (with-selected-frame f
		   (when (window-system f) (color-theme-solarized-dark))))))

;; On OS x, the scroll wheel is super sensitive
(when (eq system-type 'darwin)
  (setq mouse-wheel-scroll-amount '(0.0)))

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(indent-tabs-mode nil)
 '(js2-basic-offset 2))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
